@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item text-dark">
                <form method="post" asp-controller="account" asp-action="logout">
                    <button type="submit" style="width:auto"
                            class="nav-link btn btn-link text-dark">
                        Logout
                    </button>
                </form>
            </li>

        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="account" asp-action="register">
                    Register
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="account" asp-action="login">
                    Login
                </a>
            </li>
        }
        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
        {
            <li class="nav-item dropdown">
                <a class="nav-link text-dark dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Manage
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                    <a class="dropdown-item" asp-controller="Administration"
                       asp-action="ListUsers">Users</a>
                    <a class="dropdown-item" asp-controller="Administration"
                       asp-action="ListRoles">Roles</a>
                </div>
            </li>
        }
    </ul>
